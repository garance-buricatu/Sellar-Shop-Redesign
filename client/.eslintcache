[{"/home/garance/Documents/Sellar-Shop-Redesign/client/src/index.js":"1","/home/garance/Documents/Sellar-Shop-Redesign/client/src/App.js":"2","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/layout/Navbar.js":"3","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/Dashboard.js":"4","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/home/Home.js":"5","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/Login.js":"6","/home/garance/Documents/Sellar-Shop-Redesign/client/src/store.js":"7","/home/garance/Documents/Sellar-Shop-Redesign/client/src/reducers/index.js":"8","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/ArtworksTab.js":"9","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/ProfileTab.js":"10","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/SeminarTab.js":"11","/home/garance/Documents/Sellar-Shop-Redesign/client/src/reducers/alert.js":"12","/home/garance/Documents/Sellar-Shop-Redesign/client/src/actions/types.js":"13","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/layout/Alert.js":"14","/home/garance/Documents/Sellar-Shop-Redesign/client/src/reducers/auth.js":"15","/home/garance/Documents/Sellar-Shop-Redesign/client/src/actions/auth.js":"16","/home/garance/Documents/Sellar-Shop-Redesign/client/src/utils/setAuthToken.js":"17","/home/garance/Documents/Sellar-Shop-Redesign/client/src/actions/alert.js":"18","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/layout/Spinner.js":"19","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/routing/PrivateRoute.js":"20","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/Account.js":"21","/home/garance/Documents/Sellar-Shop-Redesign/client/src/actions/users.js":"22","/home/garance/Documents/Sellar-Shop-Redesign/client/src/reducers/profile.js":"23","/home/garance/Documents/Sellar-Shop-Redesign/client/src/actions/profile.js":"24","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/AwardsTab.js":"25","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/AllAwards.js":"26"},{"size":149,"mtime":1609976580657,"results":"27","hashOfConfig":"28"},{"size":1324,"mtime":1610400842791,"results":"29","hashOfConfig":"28"},{"size":514,"mtime":1610057866898,"results":"30","hashOfConfig":"28"},{"size":4777,"mtime":1610401952581,"results":"31","hashOfConfig":"28"},{"size":197,"mtime":1610044126720,"results":"32","hashOfConfig":"28"},{"size":2655,"mtime":1610147794121,"results":"33","hashOfConfig":"28"},{"size":374,"mtime":1610059468192,"results":"34","hashOfConfig":"28"},{"size":200,"mtime":1610213266785,"results":"35","hashOfConfig":"28"},{"size":2608,"mtime":1610421149861,"results":"36","hashOfConfig":"28"},{"size":4633,"mtime":1610401636030,"results":"37","hashOfConfig":"28"},{"size":210,"mtime":1610415900139,"results":"38","hashOfConfig":"28"},{"size":450,"mtime":1610133110923,"results":"39","hashOfConfig":"28"},{"size":507,"mtime":1610405045106,"results":"40","hashOfConfig":"28"},{"size":516,"mtime":1610134123885,"results":"41","hashOfConfig":"28"},{"size":1128,"mtime":1610214307298,"results":"42","hashOfConfig":"28"},{"size":1456,"mtime":1610214240771,"results":"43","hashOfConfig":"28"},{"size":258,"mtime":1610136777747,"results":"44","hashOfConfig":"28"},{"size":414,"mtime":1610134281554,"results":"45","hashOfConfig":"28"},{"size":284,"mtime":1609292513915,"results":"46","hashOfConfig":"28"},{"size":631,"mtime":1610142916541,"results":"47","hashOfConfig":"28"},{"size":2636,"mtime":1610210159054,"results":"48","hashOfConfig":"28"},{"size":1008,"mtime":1610213502901,"results":"49","hashOfConfig":"28"},{"size":1044,"mtime":1610405071467,"results":"50","hashOfConfig":"28"},{"size":2853,"mtime":1610405092816,"results":"51","hashOfConfig":"28"},{"size":3116,"mtime":1610404214788,"results":"52","hashOfConfig":"28"},{"size":1496,"mtime":1610417232735,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"buohgk",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"56"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"56"},"/home/garance/Documents/Sellar-Shop-Redesign/client/src/index.js",[],["117","118"],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/App.js",[],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/layout/Navbar.js",["119"],"import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Link } from 'react-router-dom';\n\nconst Navbar = props => {\n    return (\n        <div className=\"navbar\">\n            <div className=\"dark-overlay\">\n                <Link to='/' style={{ textDecoration: 'none' }}>\n                    <h1 className=\"x-large px-2\">\n                        The Sellar Shop\n                    </h1>\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nNavbar.propTypes = {\n\n}\n\nexport default Navbar\n","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/Dashboard.js",[],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/home/Home.js",["120"],"import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Home = props => {\n    return (\n        <div>\n            Home\n        </div>\n    )\n}\n\nHome.propTypes = {\n\n}\n\nexport default Home\n","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/Login.js",[],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/store.js",[],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/reducers/index.js",[],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/ArtworksTab.js",["121","122"],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/ProfileTab.js",["123","124","125","126"],"import React, { useEffect, useState, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport { getBonnieProfile } from '../../actions/profile';\nimport { createProfile } from '../../actions/profile';\n\nimport { Link, withRouter } from 'react-router-dom';\nimport { Editor } from '@tinymce/tinymce-react'\n\nimport Spinner from '../layout/Spinner'\n\n\nconst ProfileTab = ({ getBonnieProfile, createProfile, profile: { profile, loading }, history }) => {\n\n    const [formData, setFormData] = useState({\n        avatar: '',\n        description: ''\n    });\n\n    const {\n        avatar,\n        description\n    } = formData;\n\n    useEffect(() => {\n        getBonnieProfile();\n        setFormData({\n            avatar: loading || !profile.avatar ? '' : profile.avatar,\n            description: loading || !profile.description ? '' : profile.description\n        });\n    }, [getBonnieProfile]);\n\n    const onChange = (e) => {\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value\n        });\n    }\n\n    const handleEditorChange = (content, editor) => {\n        console.log('Content was updated:', content);\n        setFormData({...formData, description: content });\n    };\n\n    const onSubmit = e => {\n        e.preventDefault();\n        createProfile(formData, history, true);\n    }\n\n    return loading && profile === null ? (\n        <Spinner />\n    ) : (\n        <Fragment>\n             <h1 className=\"lead m-2\">Edit Profile</h1>\n            {profile !== null ? (\n                <Fragment>\n                    <form className=\"form mx-2\" onSubmit={e => onSubmit(e)}>\n                        <div className=\"form-group\">\n                            <p className=\"form-text\">\n                                <strong>Profile Picture : *</strong>\n                            </p>\n                            <img\n                                src={avatar}\n                            />\n                            <input \n                                type=\"text\"\n                                placeholder=\"Path to picture\"\n                                name=\"avatar\"\n                                value={avatar}\n                                onChange={e => onChange(e)}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <p className=\"form-text\">\n                                <strong>Description : </strong>\n                            </p>\n                            <Editor\n                                initialValue={description ? description : '<p>Initial Content</p>'}\n                                apiKey=\"ja6vd4rejvi91kty6007v58whwpadqp2b6gfsj192reg25xh\"\n                                init={{\n                                height: 250,\n                                menubar: false,\n                                plugins: [\n                                    'advlist autolink lists link image charmap print preview anchor',\n                                    'searchreplace visualblocks code fullscreen',\n                                    'insertdatetime media table paste code help wordcount'\n                                ],\n                                toolbar:\n                                    'undo redo | formatselect | bold italic backcolor | \\\n                                    alignleft aligncenter alignright alignjustify | \\\n                                    bullist numlist outdent indent | removeformat | help'\n                                }}\n            \n                                onEditorChange={handleEditorChange}\n                            />\n                        </div>\n                        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n                    </form>\n                </Fragment>\n            ) : (\n               <Fragment>\n                    <p>\n                        You have not setup a profile. Please add some info\n                        <Link to=\"/create-profile\" className=\"btn btn-primary\">\n                            Create Profile\n                        </Link>\n                    </p>\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nProfileTab.propTypes = {\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired,\n    getBonnieProfile: PropTypes.func.isRequired,\n    createProfile: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    profile: state.profile\n});\n\nexport default connect(mapStateToProps, { getBonnieProfile, createProfile })(ProfileTab)\n\n","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/SeminarTab.js",["127"],"import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst SeminarTab = props => {\n    return (\n        <div>\n           \n        </div>\n    )\n}\n\nSeminarTab.propTypes = {\n\n}\n\nexport default SeminarTab\n","/home/garance/Documents/Sellar-Shop-Redesign/client/src/reducers/alert.js",["128"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default function(state=initialState, action){\n    const { type, payload } = action;\n\n    switch(type){\n        case SET_ALERT:\n            return [\n                ...state, \n                payload\n            ];\n        case REMOVE_ALERT:\n            return state.filter(alert => alert.id !== payload);\n        default:\n            return state;\n    }\n};","/home/garance/Documents/Sellar-Shop-Redesign/client/src/actions/types.js",[],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/layout/Alert.js",[],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/reducers/auth.js",["129"],"import { USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from '../actions/types';\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user:null\n};\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch(type){\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                user: payload\n            }\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', payload.token);\n            return {\n                ...state,\n                ...payload,\n                isAuthenticated: true,\n                loading: false\n            }\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false,\n                user: null\n            }\n        default:\n            return state;\n    }\n};","/home/garance/Documents/Sellar-Shop-Redesign/client/src/actions/auth.js",[],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/utils/setAuthToken.js",[],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/actions/alert.js",[],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/layout/Spinner.js",[],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/routing/PrivateRoute.js",[],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/Account.js",["130"],"import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { setPassword } from '../../actions/users'; \nimport { setAlert } from '../../actions/alert';\n\nconst Account = ({ setPassword }) => {\n    const [formData, setFormData] = useState({\n        curr_password:'',\n        new_password:'',\n        new_password2:''\n    });\n\n    const { curr_password, new_password, new_password2 } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value }); // copy formData and update single field\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        setPassword(curr_password, new_password, new_password2);\n    };\n\n    return (\n        <div className=\"account p-3\">\n            <p className=\"lead\">Change password</p>\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                    <p className=\"form-text\">\n                        <strong>Current Password : *</strong>\n                    </p>\n                    <input \n                        type=\"password\"\n                        placeholder=\"Current Password\"\n                        name=\"curr_password\"\n                        value={curr_password}\n                        onChange={e => onChange(e)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <p className=\"form-text\">\n                        <strong>New Password : *</strong>\n                    </p>\n                    <input \n                        type=\"password\"\n                        placeholder=\"New Password\"\n                        name=\"new_password\"\n                        value={new_password}\n                        onChange={e => onChange(e)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <p className=\"form-text\">\n                        <strong>Confirm Password : *</strong>\n                    </p>\n                    <input \n                        type=\"password\"\n                        placeholder=\"Confirm Password\"\n                        name=\"new_password2\"\n                        value={new_password2}\n                        onChange={e => onChange(e)}\n                    />\n                </div>\n                <input \n                    type=\"submit\"\n                    class=\"btn btn-primary\"\n                />\n            </form>\n        </div>\n    )\n}\n\nAccount.propTypes = {\n    setPassword: PropTypes.func.isRequired\n}\n\nexport default connect(null, { setPassword })(Account)\n","/home/garance/Documents/Sellar-Shop-Redesign/client/src/actions/users.js",[],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/reducers/profile.js",["131"],"import { GET_PROFILE, PROFILE_ERROR, CLEAR_PROFILE, UPDATE_PROFILE, AWARD_ERROR } from \"../actions/types\";\n\nconst initialState = {\n    profile: null,\n    loading: true,\n    error: {}\n}\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch(type) {\n        case GET_PROFILE:\n        case UPDATE_PROFILE:\n            return {\n                ...state, // current state (immutable)\n                profile: payload,\n                loading:false\n            }\n        case AWARD_ERROR:\n            return {\n                ...state,\n                error: payload,\n                loading: false,\n            }\n        case PROFILE_ERROR:\n            return {\n                ...state,\n                error: payload,\n                loading: false,\n                profile: null\n            }\n        case CLEAR_PROFILE:\n            return {\n                ...state,\n                profile: null,\n                loading: false\n            }\n        default:\n            return state;\n    }\n}","/home/garance/Documents/Sellar-Shop-Redesign/client/src/actions/profile.js",[],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/AwardsTab.js",["132","133"],"import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport { addAwards } from '../../actions/profile'\nimport { getBonnieProfile } from '../../actions/profile'\n\nimport { Link, withRouter } from 'react-router-dom'\nimport AllAwards from './AllAwards'\nimport Spinner from '../layout/Spinner'\n\nconst Awards = ({ addAwards, getBonnieProfile, profile: { profile, loading }, history }) => {\n    useEffect(() => {\n        getBonnieProfile();\n    }, [getBonnieProfile]);\n\n    const [formData, setFormData] = useState({\n        title:'',\n        description:'',\n        date:''\n    });\n\n    const { title, description, date } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n        addAwards(formData, history);\n    }\n\n    return (\n        <div className=\"awards\">\n            <form \n                className=\"form m-2\"\n                onSubmit={e => onSubmit(e)}\n            >\n                <h1 className=\"lead\">Edit Awards</h1>\n                <p className=\"form-text\"><strong>Add an Award</strong></p>\n                <div className=\"form-group\">\n                    <p className=\"form-text\">\n                        <strong>Title : *</strong>\n                    </p>\n                    <input \n                        type=\"text\"\n                        placeholder=\"Title of Award\"\n                        name=\"title\"\n                        value={title}\n                        onChange={e => onChange(e)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <p className=\"form-text\">\n                        <strong>Description : *</strong>\n                    </p>\n                    <input \n                        type=\"text\"\n                        placeholder=\"Description of Award\"\n                        name=\"description\"\n                        value={description}\n                        onChange={e => onChange(e)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <p className=\"form-text\">\n                        <strong>Date : </strong>\n                    </p>\n                    <input \n                        type=\"date\"\n                        placeholder=\"Date of Award\"\n                        name=\"date\"\n                        value={date}\n                        onChange={e => onChange(e)}\n                    />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\n            </form>\n            {loading || profile===null ? (<Spinner />) : (\n                <AllAwards award={profile.awards}/>\n            )}\n        </div>\n    )\n}\n\nAwards.propTypes = {\n    addAwards: PropTypes.func.isRequired,\n    getBonnieProfile: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profile\n});\n\nexport default connect(mapStateToProps, { addAwards, getBonnieProfile })(Awards)\n","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/AllAwards.js",["134"],"import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { deleteAward } from '../../actions/profile'\nimport Moment from 'react-moment'\n\nconst AllAwards = ({ award, deleteAward }) => {\n    const awards = award.map(award => (\n        <tr key={award._id}>\n            <td>{award.title}</td>\n            <td>{award.description}</td>\n            <td>\n                {award.date === null ? \n                (<p>N/A</p>) : (\n                    <Moment format='YYYY/MM/DD'>{award.date}</Moment>\n                )}\n            </td>\n            <td>\n                <button \n                    className=\"btn btn-danger\"\n                    onClick={() => deleteAward(award._id)}\n                >\n                    Delete\n                </button>\n            </td>\n        </tr>\n    ));\n    return (\n        <div className=\"all-awards\">\n            <h2 className=\"m-2\">All Awards</h2>\n            <table className=\"table m-2\">\n                <thead>\n                    <tr>\n                        <th>Title</th>\n                        <th>Description</th>\n                        <th>Date</th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>{awards}</tbody>\n            </table>\n        </div>\n    )\n}\n\nAllAwards.propTypes = {\n    award: PropTypes.array.isRequired,\n    deleteAward: PropTypes.func.isRequired\n}\n\nexport default connect(null, { deleteAward })(AllAwards)\n",{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":2,"column":8,"nodeType":"141","messageId":"142","endLine":2,"endColumn":17},{"ruleId":"139","severity":1,"message":"140","line":2,"column":8,"nodeType":"141","messageId":"142","endLine":2,"endColumn":17},{"ruleId":"139","severity":1,"message":"140","line":2,"column":8,"nodeType":"141","messageId":"142","endLine":2,"endColumn":17},{"ruleId":"139","severity":1,"message":"143","line":49,"column":11,"nodeType":"141","messageId":"142","endLine":49,"endColumn":18},{"ruleId":"139","severity":1,"message":"144","line":7,"column":16,"nodeType":"141","messageId":"142","endLine":7,"endColumn":26},{"ruleId":"145","severity":1,"message":"146","line":31,"column":8,"nodeType":"147","endLine":31,"endColumn":26,"suggestions":"148"},{"ruleId":"149","severity":1,"message":"150","line":62,"column":29,"nodeType":"151","endLine":64,"endColumn":31},{"ruleId":"152","severity":1,"message":"153","line":89,"column":37,"nodeType":"154","messageId":"155","endLine":91,"endColumn":90},{"ruleId":"139","severity":1,"message":"140","line":2,"column":8,"nodeType":"141","messageId":"142","endLine":2,"endColumn":17},{"ruleId":"156","severity":1,"message":"157","line":5,"column":1,"nodeType":"158","endLine":19,"endColumn":2},{"ruleId":"156","severity":1,"message":"157","line":10,"column":1,"nodeType":"158","endLine":43,"endColumn":2},{"ruleId":"139","severity":1,"message":"159","line":5,"column":10,"nodeType":"141","messageId":"142","endLine":5,"endColumn":18},{"ruleId":"156","severity":1,"message":"157","line":9,"column":1,"nodeType":"158","endLine":42,"endColumn":2},{"ruleId":"139","severity":1,"message":"160","line":7,"column":10,"nodeType":"141","messageId":"142","endLine":7,"endColumn":14},{"ruleId":"139","severity":1,"message":"144","line":7,"column":16,"nodeType":"141","messageId":"142","endLine":7,"endColumn":26},{"ruleId":"139","severity":1,"message":"161","line":1,"column":17,"nodeType":"141","messageId":"142","endLine":1,"endColumn":25},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","'onClick' is assigned a value but never used.","'withRouter' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loading', 'profile.avatar', and 'profile.description'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'loading', you can also switch to useReducer instead of useState and read 'loading' in the reducer.","ArrayExpression",["164"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'setAlert' is defined but never used.","'Link' is defined but never used.","'Fragment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},"Update the dependencies array to be: [getBonnieProfile, loading, profile.avatar, profile.description]",{"range":"167","text":"168"},[908,926],"[getBonnieProfile, loading, profile.avatar, profile.description]"]