[{"/home/garance/Documents/Sellar-Shop-Redesign/client/src/index.js":"1","/home/garance/Documents/Sellar-Shop-Redesign/client/src/App.js":"2","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/layout/Navbar.js":"3","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/Dashboard.js":"4","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/home/Home.js":"5","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/Login.js":"6","/home/garance/Documents/Sellar-Shop-Redesign/client/src/store.js":"7","/home/garance/Documents/Sellar-Shop-Redesign/client/src/reducers/index.js":"8","/home/garance/Documents/Sellar-Shop-Redesign/client/src/reducers/alert.js":"9","/home/garance/Documents/Sellar-Shop-Redesign/client/src/actions/types.js":"10","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/layout/Alert.js":"11","/home/garance/Documents/Sellar-Shop-Redesign/client/src/reducers/auth.js":"12","/home/garance/Documents/Sellar-Shop-Redesign/client/src/actions/auth.js":"13","/home/garance/Documents/Sellar-Shop-Redesign/client/src/utils/setAuthToken.js":"14","/home/garance/Documents/Sellar-Shop-Redesign/client/src/actions/alert.js":"15","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/layout/Spinner.js":"16","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/routing/PrivateRoute.js":"17","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/Account.js":"18","/home/garance/Documents/Sellar-Shop-Redesign/client/src/actions/users.js":"19","/home/garance/Documents/Sellar-Shop-Redesign/client/src/reducers/profile.js":"20","/home/garance/Documents/Sellar-Shop-Redesign/client/src/actions/profile.js":"21","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/AwardsTab.js":"22","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/AllAwards.js":"23","/home/garance/Documents/Sellar-Shop-Redesign/client/src/reducers/artwork.js":"24","/home/garance/Documents/Sellar-Shop-Redesign/client/src/actions/artwork.js":"25","/home/garance/Documents/Sellar-Shop-Redesign/client/src/reducers/seminar.js":"26","/home/garance/Documents/Sellar-Shop-Redesign/client/src/actions/seminar.js":"27","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/artworks/ArtworksTab.js":"28","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/artworks/AddArtwork.js":"29","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/artworks/EditArtwork.js":"30","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/seminars/SeminarTab.js":"31","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/seminars/SeminarEvent.js":"32","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/seminars/AddSeminar.js":"33","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/profile/ProfileTab.js":"34"},{"size":149,"mtime":1609976580657,"results":"35","hashOfConfig":"36"},{"size":1478,"mtime":1610819518582,"results":"37","hashOfConfig":"36"},{"size":514,"mtime":1610057866898,"results":"38","hashOfConfig":"36"},{"size":4803,"mtime":1610820147796,"results":"39","hashOfConfig":"36"},{"size":197,"mtime":1610044126720,"results":"40","hashOfConfig":"36"},{"size":2655,"mtime":1610147794121,"results":"41","hashOfConfig":"36"},{"size":374,"mtime":1610059468192,"results":"42","hashOfConfig":"36"},{"size":292,"mtime":1610580688312,"results":"43","hashOfConfig":"36"},{"size":450,"mtime":1610133110923,"results":"44","hashOfConfig":"36"},{"size":1000,"mtime":1610828598063,"results":"45","hashOfConfig":"36"},{"size":516,"mtime":1610134123885,"results":"46","hashOfConfig":"36"},{"size":1128,"mtime":1610214307298,"results":"47","hashOfConfig":"36"},{"size":1456,"mtime":1610478128394,"results":"48","hashOfConfig":"36"},{"size":258,"mtime":1610136777747,"results":"49","hashOfConfig":"36"},{"size":414,"mtime":1610134281554,"results":"50","hashOfConfig":"36"},{"size":284,"mtime":1609292513915,"results":"51","hashOfConfig":"36"},{"size":631,"mtime":1610142916541,"results":"52","hashOfConfig":"36"},{"size":2636,"mtime":1610210159054,"results":"53","hashOfConfig":"36"},{"size":1008,"mtime":1610213502901,"results":"54","hashOfConfig":"36"},{"size":1044,"mtime":1610486823917,"results":"55","hashOfConfig":"36"},{"size":2853,"mtime":1610405092816,"results":"56","hashOfConfig":"36"},{"size":3117,"mtime":1610505801740,"results":"57","hashOfConfig":"36"},{"size":1984,"mtime":1610505901622,"results":"58","hashOfConfig":"36"},{"size":1117,"mtime":1610828538113,"results":"59","hashOfConfig":"36"},{"size":3715,"mtime":1610819110283,"results":"60","hashOfConfig":"36"},{"size":873,"mtime":1610828579518,"results":"61","hashOfConfig":"36"},{"size":2204,"mtime":1610828625824,"results":"62","hashOfConfig":"36"},{"size":3119,"mtime":1610820024915,"results":"63","hashOfConfig":"36"},{"size":3622,"mtime":1610819426681,"results":"64","hashOfConfig":"36"},{"size":5138,"mtime":1610819535674,"results":"65","hashOfConfig":"36"},{"size":3160,"mtime":1610829588031,"results":"66","hashOfConfig":"36"},{"size":1960,"mtime":1610829375517,"results":"67","hashOfConfig":"36"},{"size":4157,"mtime":1610819997891,"results":"68","hashOfConfig":"36"},{"size":4736,"mtime":1610820126912,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"buohgk",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"72"},"/home/garance/Documents/Sellar-Shop-Redesign/client/src/index.js",[],["150","151"],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/App.js",[],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/layout/Navbar.js",["152"],"import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Link } from 'react-router-dom';\n\nconst Navbar = props => {\n    return (\n        <div className=\"navbar\">\n            <div className=\"dark-overlay\">\n                <Link to='/' style={{ textDecoration: 'none' }}>\n                    <h1 className=\"x-large px-2\">\n                        The Sellar Shop\n                    </h1>\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nNavbar.propTypes = {\n\n}\n\nexport default Navbar\n","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/Dashboard.js",[],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/home/Home.js",["153"],"import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Home = props => {\n    return (\n        <div>\n            Home\n        </div>\n    )\n}\n\nHome.propTypes = {\n\n}\n\nexport default Home\n","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/Login.js",[],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/store.js",[],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/reducers/index.js",[],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/reducers/alert.js",["154"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default function(state=initialState, action){\n    const { type, payload } = action;\n\n    switch(type){\n        case SET_ALERT:\n            return [\n                ...state, \n                payload\n            ];\n        case REMOVE_ALERT:\n            return state.filter(alert => alert.id !== payload);\n        default:\n            return state;\n    }\n};","/home/garance/Documents/Sellar-Shop-Redesign/client/src/actions/types.js",[],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/layout/Alert.js",[],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/reducers/auth.js",["155"],"import { USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from '../actions/types';\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user:null\n};\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch(type){\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                user: payload\n            }\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', payload.token);\n            return {\n                ...state,\n                ...payload,\n                isAuthenticated: true,\n                loading: false\n            }\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false,\n                user: null\n            }\n        default:\n            return state;\n    }\n};","/home/garance/Documents/Sellar-Shop-Redesign/client/src/actions/auth.js",[],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/utils/setAuthToken.js",[],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/actions/alert.js",[],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/layout/Spinner.js",[],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/routing/PrivateRoute.js",[],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/Account.js",["156"],"import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { setPassword } from '../../actions/users'; \nimport { setAlert } from '../../actions/alert';\n\nconst Account = ({ setPassword }) => {\n    const [formData, setFormData] = useState({\n        curr_password:'',\n        new_password:'',\n        new_password2:''\n    });\n\n    const { curr_password, new_password, new_password2 } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value }); // copy formData and update single field\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        setPassword(curr_password, new_password, new_password2);\n    };\n\n    return (\n        <div className=\"account p-3\">\n            <p className=\"lead\">Change password</p>\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                    <p className=\"form-text\">\n                        <strong>Current Password : *</strong>\n                    </p>\n                    <input \n                        type=\"password\"\n                        placeholder=\"Current Password\"\n                        name=\"curr_password\"\n                        value={curr_password}\n                        onChange={e => onChange(e)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <p className=\"form-text\">\n                        <strong>New Password : *</strong>\n                    </p>\n                    <input \n                        type=\"password\"\n                        placeholder=\"New Password\"\n                        name=\"new_password\"\n                        value={new_password}\n                        onChange={e => onChange(e)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <p className=\"form-text\">\n                        <strong>Confirm Password : *</strong>\n                    </p>\n                    <input \n                        type=\"password\"\n                        placeholder=\"Confirm Password\"\n                        name=\"new_password2\"\n                        value={new_password2}\n                        onChange={e => onChange(e)}\n                    />\n                </div>\n                <input \n                    type=\"submit\"\n                    class=\"btn btn-primary\"\n                />\n            </form>\n        </div>\n    )\n}\n\nAccount.propTypes = {\n    setPassword: PropTypes.func.isRequired\n}\n\nexport default connect(null, { setPassword })(Account)\n","/home/garance/Documents/Sellar-Shop-Redesign/client/src/actions/users.js",[],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/reducers/profile.js",["157"],"import { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE, AWARD_ERROR, CLEAR_PROFILE } from \"../actions/types\";\n\nconst initialState = {\n    profile: null,\n    loading: true,\n    error: {}\n}\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch(type) {\n        case GET_PROFILE:\n        case UPDATE_PROFILE:\n            return {\n                ...state, // current state (immutable)\n                profile: payload,\n                loading:false\n            }\n        case AWARD_ERROR:\n            return {\n                ...state,\n                error: payload,\n                loading: false,\n            }\n        case PROFILE_ERROR:\n            return {\n                ...state,\n                error: payload,\n                loading: false,\n                profile: null\n            }\n        case CLEAR_PROFILE:\n            return {\n                ...state,\n                profile: null,\n                loading: false\n            }\n        default:\n            return state;\n    }\n}","/home/garance/Documents/Sellar-Shop-Redesign/client/src/actions/profile.js",[],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/AwardsTab.js",["158","159"],"import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport { addAwards } from '../../actions/profile'\nimport { getBonnieProfile } from '../../actions/profile'\n\nimport { Link, withRouter } from 'react-router-dom'\nimport AllAwards from './AllAwards'\nimport Spinner from '../layout/Spinner'\n\nconst Awards = ({ addAwards, getBonnieProfile, profile: { profile, loading }, history }) => {\n    useEffect(() => {\n        getBonnieProfile();\n    }, [getBonnieProfile]);\n\n    const [formData, setFormData] = useState({\n        title:'',\n        description:'',\n        date:''\n    });\n\n    const { title, description, date } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n        addAwards(formData, history);\n    }\n\n    return (\n        <div className=\"awards\">\n            <form \n                className=\"form m-2\"\n                onSubmit={e => onSubmit(e)}\n            >\n                <h1 className=\"lead\">Edit Awards</h1>\n                <p className=\"form-text\"><strong>Add an Award</strong></p>\n                <div className=\"form-group\">\n                    <p className=\"form-text\">\n                        <strong>Title : *</strong>\n                    </p>\n                    <input \n                        type=\"text\"\n                        placeholder=\"Title of Award\"\n                        name=\"title\"\n                        value={title}\n                        onChange={e => onChange(e)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <p className=\"form-text\">\n                        <strong>Description : *</strong>\n                    </p>\n                    <input \n                        type=\"text\"\n                        placeholder=\"Description of Award\"\n                        name=\"description\"\n                        value={description}\n                        onChange={e => onChange(e)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <p className=\"form-text\">\n                        <strong>Date : </strong>\n                    </p>\n                    <input \n                        type=\"date\"\n                        placeholder=\"Date of Award\"\n                        name=\"date\"\n                        value={date}\n                        onChange={e => onChange(e)}\n                    />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\n            </form>\n            {loading || profile===null ? (<Spinner />) : (\n                <AllAwards awards={profile.awards}/>\n            )}\n        </div>\n    )\n}\n\nAwards.propTypes = {\n    addAwards: PropTypes.func.isRequired,\n    getBonnieProfile: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profile\n});\n\nexport default connect(mapStateToProps, { addAwards, getBonnieProfile })(Awards)\n","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/AllAwards.js",["160"],"import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { deleteAward } from '../../actions/profile'\nimport Moment from 'react-moment'\n\nconst AllAwards = ({ awards, deleteAward }) => {\n    const awardList = awards.map(award => (\n        <tr key={award._id}>\n            <td><div>{award.title}</div></td>\n            <td><div>{award.description}</div></td>\n            <td><div>\n                {award.date === null ? \n                (<p>N/A</p>) : (\n                    <Moment format='YYYY/MM/DD'>{award.date}</Moment>\n                )}\n                </div></td>\n            <td className=\"actions\">\n                <div>\n                <button \n                    className=\"btn btn-danger\"\n                    onClick={() => deleteAward(award._id)}\n                >\n                    Delete\n                </button>\n                </div>\n            </td>\n        </tr>\n    ));\n    return (\n        <div>\n            {awards.length === 0 ? (\n                <div className=\"p-2\">\n                    <h1 className=\"lead\">\n                        No Awards Yet\n                    </h1>\n                </div>\n            ) : (\n                <div className=\"all-awards\">\n                    <h2 className=\"m-2\">All Awards</h2>\n                    <table className=\"table m-2\">\n                        <thead>\n                            <tr>\n                                <th>Title</th>\n                                <th>Description</th>\n                                <th>Date</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>{awardList}</tbody>\n                    </table>\n                </div>\n            )}\n        </div>\n    )\n}\n\nAllAwards.propTypes = {\n    award: PropTypes.array.isRequired,\n    deleteAward: PropTypes.func.isRequired\n}\n\nexport default connect(null, { deleteAward })(AllAwards)\n","/home/garance/Documents/Sellar-Shop-Redesign/client/src/reducers/artwork.js",["161"],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/actions/artwork.js",[],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/reducers/seminar.js",["162"],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/actions/seminar.js",[],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/artworks/ArtworksTab.js",["163","164","165"],"import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { getArtworks, deleteArtwork } from '../../../actions/artwork'\nimport Moment from 'react-moment'\n\n\nimport Spinner from '../../layout/Spinner'\nimport AddArtwork from '../artworks/AddArtwork';\n\n//https://freefrontend.com/css-gallery/\n\nconst ArtworksTab = ({ getArtworks, deleteArtwork, artwork: { artworks, loading } }) => {\n    useEffect(() => { \n        getArtworks(); \n    }, [getArtworks]);\n\n    const allArtworks = artworks.map(art => (\n        <tr key={art._id}>\n            <td><div>\n                <img\n                    src={art.photoURL}\n                    width=\"80%\"\n                    height=\"auto\"\n                />\n            </div></td>\n            <td><div>{art.title}</div></td>\n            <td><div>{art.size}</div></td>\n            <td><div>{art.medium}</div></td>\n            <td><div>\n                {art.date}\n            </div></td>\n            <td className=\"actions\">\n                <div>\n                    <Link\n                        to={`/edit-artwork/${art._id}`}\n                        className=\"btn btn-primary m-1\"\n                    >\n                        Edit\n                    </Link>\n                    <button \n                        className=\"btn btn-danger m-1\"\n                        onClick={() => deleteArtwork(art._id)}\n                    >\n                        Delete\n                    </button>\n                </div>\n            </td>\n        </tr>\n    ));\n\n    return (\n        <div>\n            <AddArtwork />\n            {\n                artworks.length === 0 ? (\n                    <div className=\"p-2\">\n                        <h1 className=\"lead\">\n                            No Artworks Yet\n                        </h1>\n                    </div>\n                ) : loading ? (\n                    <Spinner />\n                ) : (\n                    <div className='artworks m-2'>\n                        <h1 className='lead'>All Artworks</h1>\n                        <table className=\"table my-1\">\n                            <thead>\n                                <tr>\n                                    <th>Photo</th>\n                                    <th>Title</th>\n                                    <th>Dimensions (in inches)</th>\n                                    <th>Medium</th>\n                                    <th>Year Created</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n                            <tbody>{allArtworks}</tbody>\n                        </table>\n                    </div>\n                )\n            }\n        </div>\n    )\n}\n\nArtworksTab.propTypes = {\n    getArtworks: PropTypes.func.isRequired,\n    deleteArtwork: PropTypes.func.isRequired,\n    artwork: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    artwork: state.artwork\n});\n\nexport default connect(mapStateToProps, { getArtworks, deleteArtwork })(ArtworksTab)\n","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/artworks/AddArtwork.js",[],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/artworks/EditArtwork.js",["166","167","168"],"import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { getArtwork, editArtwork } from '../../../actions/artwork'\n\nimport { Link, withRouter } from 'react-router-dom'\n\nimport Spinner from '../../layout/Spinner'\n\nconst EditArtwork = ({ getArtwork, editArtwork, artwork: {artwork, loading}, match, history }) => {\n    const [formData, setFormData] = useState({\n        title:'',\n        photoURL:'',\n        size:'',\n        medium: '',\n        date:''\n    });\n\n    const { title, photoURL, size, medium, date } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n        editArtwork(artwork._id, formData, history);\n    }\n\n    useEffect(() => { \n        getArtwork(match.params.id);\n    }, [getArtwork, match.params.id]);\n\n    useEffect(() => { \n        setFormData({\n            title: loading || artwork === null ? '': artwork.title,\n            photoURL: loading || artwork === null ? '': artwork.photoURL,\n            size: loading || artwork === null ? '': artwork.size,\n            medium: loading || artwork === null ? '': artwork.medium,\n            date: loading || artwork === null ? '': artwork.date\n        });\n    }, [artwork]);\n\n    return (\n        <div className=\"edit-artwork\">\n            <div><h1 className=\"form-text my-1\">Edit Artwork</h1></div>\n            <img\n                src={artwork === null || loading ? <Spinner /> : photoURL}\n            />\n            <div className=\"edit-artwork-inner m-2\">\n                {artwork === null || loading ? <Spinner /> : (\n                    <form \n                        className=\"form\"\n                        onSubmit={e => onSubmit(e)}\n                    >\n                        <div className=\"form-group\">\n                            <p className=\"form-text\">\n                                <strong>Title : </strong>\n                            </p>\n                            <input \n                                type=\"text\"\n                                placeholder=\"Title of Artwork\"\n                                name=\"title\"\n                                value={title}\n                                onChange={e => onChange(e)}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <p className=\"form-text\">\n                                <strong>Photo URL : </strong>\n                            </p>\n                            <input \n                                type=\"url\"\n                                placeholder=\"Path of Artwork Image\"\n                                name=\"photoURL\"\n                                value={photoURL}\n                                onChange={e => onChange(e)}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <p className=\"form-text\">\n                                <strong>Dimensions (in inches) : </strong>\n                            </p>\n                            <input \n                                type=\"text\"\n                                placeholder=\"20 x 20\"\n                                name=\"size\"\n                                value={size}\n                                onChange={e => onChange(e)}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <p className=\"form-text\">\n                                <strong>Medium : </strong>\n                            </p>\n                            <select name=\"medium\" value={medium} onChange={e => onChange(e)}>\n                                <option value=\"0\">Select Medium</option>\n                                <option value=\"Watercolor\">Watercolor</option>\n                                <option value=\"Pencil\">Pencil</option>\n                                <option value=\"Oil\">Oil</option>\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <p className=\"form-text\">\n                                <strong>Date :</strong>\n                            </p>\n                            <input \n                                type=\"text\"\n                                name=\"date\"\n                                value={date}\n                                onChange={e => onChange(e)}\n                            />\n                        </div>\n                        <Link className=\"btn\" to=\"/dashboard\">Back</Link>\n                        <input type=\"submit\" className=\"btn btn-primary\"/>\n                    </form>\n                )}\n            </div>\n        </div>\n    )\n}\n\nEditArtwork.propTypes = {\n    getArtwork: PropTypes.func.isRequired,\n    editArtwork: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    artwork: state.artwork\n});\n\nexport default connect(mapStateToProps, { getArtwork, editArtwork })(EditArtwork)\n","/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/seminars/SeminarTab.js",[],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/seminars/SeminarEvent.js",["169"],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/seminars/AddSeminar.js",[],"/home/garance/Documents/Sellar-Shop-Redesign/client/src/components/dashboard/profile/ProfileTab.js",["170","171","172","173"],"import React, { useEffect, useState, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport { getBonnieProfile } from '../../../actions/profile';\nimport { createProfile } from '../../../actions/profile';\n\nimport { Link, withRouter } from 'react-router-dom';\nimport { Editor } from '@tinymce/tinymce-react'\n\nimport Spinner from '../../layout/Spinner'\n\n\nconst ProfileTab = ({ getBonnieProfile, createProfile, profile: { profile, loading }, history }) => {\n\n    useEffect(() => {\n        getBonnieProfile();\n    }, [getBonnieProfile]);\n\n    useEffect(() => {\n        setFormData({\n            avatar: loading || !profile.avatar ? '' : profile.avatar,\n            description: loading || !profile.description ? '' : profile.description\n        });\n    }, [profile]);\n    \n    const [formData, setFormData] = useState({\n        avatar: '',\n        description: ''\n    });\n\n    const {\n        avatar,\n        description\n    } = formData;\n\n    const onChange = (e) => {\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value\n        });\n    }\n\n    const handleEditorChange = (content, editor) => {\n        console.log('Content was updated:', content);\n        setFormData({...formData, description: content });\n    };\n\n    const onSubmit = e => {\n        e.preventDefault();\n        createProfile(formData, history, true);\n    }\n\n    return loading && profile === null ? (\n        <Spinner />\n    ) : (\n        <Fragment>\n             <h1 className=\"lead m-2\">Edit Profile</h1>\n            {profile !== null ? (\n                <Fragment>\n                    <form className=\"form mx-2\" onSubmit={e => onSubmit(e)}>\n                        <div className=\"form-group\">\n                            <p className=\"form-text\">\n                                <strong>Profile Picture : *</strong>\n                            </p>\n                            <input \n                                type=\"url\"\n                                placeholder=\"Path to picture\"\n                                name=\"avatar\"\n                                value={avatar}\n                                onChange={e => onChange(e)}\n                            />\n                            <img\n                                src={avatar}\n                                className=\"my-1\"\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <p className=\"form-text\">\n                                <strong>Description : </strong>\n                            </p>\n                            <Editor\n                                initialValue={description ? description : '<p>Initial Content</p>'}\n                                apiKey=\"ja6vd4rejvi91kty6007v58whwpadqp2b6gfsj192reg25xh\"\n                                init={{\n                                height: 250,\n                                menubar: false,\n                                plugins: [\n                                    'advlist autolink lists link image charmap print preview anchor',\n                                    'searchreplace visualblocks code fullscreen',\n                                    'insertdatetime media table paste code help wordcount'\n                                ],\n                                toolbar:\n                                    'undo redo | formatselect | bold italic backcolor | \\\n                                    alignleft aligncenter alignright alignjustify | \\\n                                    bullist numlist outdent indent | removeformat | help'\n                                }}\n            \n                                onEditorChange={handleEditorChange}\n                            />\n                        </div>\n                        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n                    </form>\n                </Fragment>\n            ) : (\n               <Fragment>\n                    <p>\n                        You have not setup a profile. Please add some info\n                        <Link to=\"/create-profile\" className=\"btn btn-primary\">\n                            Create Profile\n                        </Link>\n                    </p>\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nProfileTab.propTypes = {\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired,\n    getBonnieProfile: PropTypes.func.isRequired,\n    createProfile: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    profile: state.profile\n});\n\nexport default connect(mapStateToProps, { getBonnieProfile, createProfile })(ProfileTab)\n\n",{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":17},{"ruleId":"178","severity":1,"message":"179","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":17},{"ruleId":"182","severity":1,"message":"183","line":5,"column":1,"nodeType":"184","endLine":19,"endColumn":2},{"ruleId":"182","severity":1,"message":"183","line":10,"column":1,"nodeType":"184","endLine":43,"endColumn":2},{"ruleId":"178","severity":1,"message":"185","line":5,"column":10,"nodeType":"180","messageId":"181","endLine":5,"endColumn":18},{"ruleId":"182","severity":1,"message":"183","line":9,"column":1,"nodeType":"184","endLine":42,"endColumn":2},{"ruleId":"178","severity":1,"message":"186","line":7,"column":10,"nodeType":"180","messageId":"181","endLine":7,"endColumn":14},{"ruleId":"178","severity":1,"message":"187","line":7,"column":16,"nodeType":"180","messageId":"181","endLine":7,"endColumn":26},{"ruleId":"178","severity":1,"message":"188","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":25},{"ruleId":"182","severity":1,"message":"183","line":10,"column":1,"nodeType":"184","endLine":45,"endColumn":2},{"ruleId":"182","severity":1,"message":"183","line":10,"column":1,"nodeType":"184","endLine":37,"endColumn":2},{"ruleId":"178","severity":1,"message":"189","line":1,"column":28,"nodeType":"180","messageId":"181","endLine":1,"endColumn":36},{"ruleId":"178","severity":1,"message":"190","line":6,"column":8,"nodeType":"180","messageId":"181","endLine":6,"endColumn":14},{"ruleId":"191","severity":1,"message":"192","line":22,"column":17,"nodeType":"193","endLine":26,"endColumn":19},{"ruleId":"178","severity":1,"message":"187","line":6,"column":16,"nodeType":"180","messageId":"181","endLine":6,"endColumn":26},{"ruleId":"194","severity":1,"message":"195","line":40,"column":8,"nodeType":"196","endLine":40,"endColumn":17,"suggestions":"197"},{"ruleId":"191","severity":1,"message":"192","line":45,"column":13,"nodeType":"193","endLine":47,"endColumn":15},{"ruleId":"191","severity":1,"message":"192","line":16,"column":13,"nodeType":"193","endLine":21,"endColumn":15},{"ruleId":"178","severity":1,"message":"187","line":7,"column":16,"nodeType":"180","messageId":"181","endLine":7,"endColumn":26},{"ruleId":"194","severity":1,"message":"195","line":24,"column":8,"nodeType":"196","endLine":24,"endColumn":17,"suggestions":"198"},{"ruleId":"191","severity":1,"message":"192","line":72,"column":29,"nodeType":"193","endLine":75,"endColumn":31},{"ruleId":"199","severity":1,"message":"200","line":93,"column":37,"nodeType":"201","messageId":"202","endLine":95,"endColumn":90},"no-native-reassign",["203"],"no-negated-in-lhs",["204"],"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'setAlert' is defined but never used.","'Link' is defined but never used.","'withRouter' is defined but never used.","'Fragment' is defined but never used.","'useState' is defined but never used.","'Moment' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loading'. Either include it or remove the dependency array. If 'setFormData' needs the current value of 'loading', you can also switch to useReducer instead of useState and read 'loading' in the reducer.","ArrayExpression",["205"],["206"],"no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString","no-global-assign","no-unsafe-negation",{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},"Update the dependencies array to be: [artwork, loading]",{"range":"211","text":"212"},"Update the dependencies array to be: [loading, profile]",{"range":"213","text":"214"},[1313,1322],"[artwork, loading]",[801,810],"[loading, profile]"]